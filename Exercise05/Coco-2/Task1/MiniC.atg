/* MiniC: (C# Version)                              HDO, 2006-08-27
   -----
   Attributed Grammar for the MiniC Parser.
===================================================================*/

COMPILER MiniC

SEM <<
                                    // globals for semantic actions:
  private static String identStr;   //    identifier string
  private static int    numberVal;  //    number value       
       
>>

CHARACTER SETS

  letter = 'A'..'Z' + 'a'..'z'.
  digit  = '0'..'9'.
  ignore = CHR(9) + EOL IGNORE.

COMMENTS
  FROM '/*' TO '*/' NESTED.
  FROM '//' TO EOL.
  
KEYWORDS

  'int'.
  'main'.
  'printf'.
  'scanf'.
  'void'.
  'if'.
  'else'.

TOKENS

  '+'.   '-'.   '*'.  '/'.   '('.   ')'.
  ','.   '='.   ';'.  '{'.   '}'.

TOKEN CLASSES
  
  ident<<out String identStr>> =
    letter { letter | digit } 
                                  LEX <<
                                    identStr = tokenStr;
                                  >>
    .

  number<<out int numberVal>> =
    digit { digit }               LEX <<
                                    numberVal = Convert.ToInt32(tokenStr);
                                  >>
    .

NONTERMINALS 

  MiniC.
  VarDecl.
  StatSeq.
  Stat.
  Expr.
  Term.
  Fact.

RULES

  MiniC =                                          
    'void' 'main' '(' ')'
    '{'
    [ VarDecl
    ]
    StatSeq
    '}' .

  VarDecl =                       
    'int' ident<<out identStr>>   
    { ',' ident<<out identStr>>   
    }
    ';' .

  StatSeq =
    Stat 
    { Stat 
    } .

  Stat =                          
    [ ident<<out identStr>>       
      '=' Expr           
    | 'scanf'
      '(' ident<<out identStr>>   
      ')'
    | 'printf'
      '(' Expr           
      ')'
    | 'if' '(' Expr ')' StatSeq ['else' StatSeq]
    ] 
    ';' .

  Expr =             
    Term
    { '+' Term           
    | '-' Term           
    } .

   Term =            
     Fact
     { '*' Fact          
     | '/' Fact         
     } .

   Fact =            
       ident<<out identStr>>      
     | number<<out numberVal>>    
     | '(' Expr 
       ')' .

END MiniC.

Grammar

    0 $accept: MiniCpp $end

    1 MiniCpp: ε
    2        | MiniCpp TopLevel

    3 TopLevel: ConstDef
    4         | VarDef
    5         | FuncDecl
    6         | FuncDef
    7         | ';'

    8 ConstDef: CONST Type IdentInit ';'

    9 IdentInit: IDENT Init
   10          | IdentInit ',' IDENT Init

   11 Init: '=' InitValue

   12 InitValue: FALSE
   13          | TRUE
   14          | NULLPTR
   15          | OptSign NUMBER

   16 OptSign: ε
   17        | '+'
   18        | '-'

   19 VarDef: Type VarList ';'

   20 VarList: VarItem
   21        | VarList ',' VarItem

   22 VarItem: OptPointer IDENT OptInit

   23 OptPointer: ε
   24           | '*'

   25 OptInit: ε
   26        | Init

   27 FuncDecl: FuncHead ';'

   28 $@1: ε

   29 FuncDef: FuncHead $@1 Block

   30 FuncHead: Type OptPointer IDENT '(' OptFormParList ')'

   31 OptFormParList: ε
   32               | FormParList

   33 FormParList: VOID
   34            | ParamDef
   35            | FormParList ',' ParamDef

   36 ParamDef: Type OptPointer IDENT OptArray

   37 OptArray: ε
   38         | '[' ']'

   39 Type: VOID
   40     | BOOL
   41     | INT

   42 Block: '{' BlockItems '}'

   43 BlockItems: ε
   44           | BlockItems BlockItem

   45 BlockItem: ConstDef
   46          | VarDef
   47          | Stat

   48 Stat: EmptyStat
   49     | BlockStat
   50     | ExprStat
   51     | IfStat
   52     | WhileStat
   53     | BreakStat
   54     | InputStat
   55     | OutputStat
   56     | DeleteStat
   57     | ReturnStat

   58 EmptyStat: ';'

   59 BlockStat: Block

   60 ExprStat: Expr ';'

   61 IfStat: IF '(' Expr ')' Stat
   62       | IF '(' Expr ')' Stat ELSE Stat

   63 WhileStat: WHILE '(' Expr ')' Stat

   64 BreakStat: BREAK ';'

   65 InputStat: CIN SHR IDENT ';'

   66 OutputStat: COUT OutList ';'

   67 OutList: SHL OutExpr
   68        | OutList SHL OutExpr

   69 OutExpr: Expr
   70        | STRING
   71        | ENDL

   72 DeleteStat: DELETE '[' ']' IDENT ';'

   73 ReturnStat: RETURN OptExpr ';'

   74 OptExpr: ε
   75        | Expr

   76 Expr: OrExpr
   77     | OrExpr AssignOp OrExpr

   78 AssignOp: '='
   79         | PLUSEQ
   80         | MINUSEQ
   81         | TIMESEQ
   82         | DIVEQ
   83         | MODEQ

   84 OrExpr: AndExpr
   85       | OrExpr OR AndExpr

   86 AndExpr: RelExpr
   87        | AndExpr AND RelExpr

   88 RelExpr: SimpleExpr
   89        | RelExpr RelOp SimpleExpr

   90 RelOp: EQ
   91      | NEQ
   92      | '<'
   93      | LEQ
   94      | '>'
   95      | GEQ

   96 SimpleExpr: OptSign Term
   97           | SimpleExpr AddOp Term

   98 AddOp: '+'
   99      | '-'

  100 Term: NotFact
  101     | Term MulOp NotFact

  102 MulOp: '*'
  103      | '/'
  104      | '%'

  105 NotFact: Fact
  106        | '!' Fact

  107 Fact: FALSE
  108     | TRUE
  109     | NULLPTR
  110     | NUMBER
  111     | LValue
  112     | NEW Type '[' Expr ']'
  113     | '(' Expr ')'

  114 LValue: OptInc IDENT OptPostInc
  115       | OptInc IDENT '[' Expr ']' OptPostInc

  116 $@2: ε

  117 LValue: OptInc IDENT '(' $@2 OptActParams ')' OptPostInc

  118 OptInc: ε
  119       | INC
  120       | DEC

  121 OptPostInc: ε
  122           | INC
  123           | DEC

  124 OptActParams: ε
  125             | ActParams

  126 ActParams: Expr
  127          | ActParams ',' Expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 106
    '%' (37) 104
    '(' (40) 30 61 62 63 113 117
    ')' (41) 30 61 62 63 113 117
    '*' (42) 24 102
    '+' (43) 17 98
    ',' (44) 10 21 35 127
    '-' (45) 18 99
    '/' (47) 103
    ';' (59) 7 8 19 27 58 60 64 65 66 72 73
    '<' (60) 92
    '=' (61) 11 78
    '>' (62) 94
    '[' (91) 38 72 112 115
    ']' (93) 38 72 112 115
    '{' (123) 42
    '}' (125) 42
    error (256)
    BOOL (258) 40
    BREAK (259) 64
    CIN (260) 65
    CONST (261) 8
    COUT (262) 66
    DELETE (263) 72
    ELSE (264) 62
    ENDL (265) 71
    FALSE (266) 12 107
    IF (267) 61 62
    INT (268) 41
    NEW (269) 112
    NULLPTR (270) 14 109
    RETURN (271) 73
    STRING (272) 70
    TRUE (273) 13 108
    VOID (274) 33 39
    WHILE (275) 63
    IDENT <strval> (276) 9 10 22 30 36 65 72 114 115 117
    NUMBER <intval> (277) 15 110
    SHL (278) 67 68
    SHR (279) 65
    PLUSEQ (280) 79
    MINUSEQ (281) 80
    TIMESEQ (282) 81
    DIVEQ (283) 82
    MODEQ (284) 83
    EQ (285) 90
    NEQ (286) 91
    LEQ (287) 93
    GEQ (288) 95
    AND (289) 87
    OR (290) 85
    INC (291) 119 122
    DEC (292) 120 123
    LOWER_THAN_ELSE (293)


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    MiniCpp (57)
        on left: 1 2
        on right: 0 2
    TopLevel (58)
        on left: 3 4 5 6 7
        on right: 2
    ConstDef (59)
        on left: 8
        on right: 3 45
    IdentInit (60)
        on left: 9 10
        on right: 8 10
    Init (61)
        on left: 11
        on right: 9 10 26
    InitValue (62)
        on left: 12 13 14 15
        on right: 11
    OptSign (63)
        on left: 16 17 18
        on right: 15 96
    VarDef (64)
        on left: 19
        on right: 4 46
    VarList (65)
        on left: 20 21
        on right: 19 21
    VarItem (66)
        on left: 22
        on right: 20 21
    OptPointer (67)
        on left: 23 24
        on right: 22 30 36
    OptInit (68)
        on left: 25 26
        on right: 22
    FuncDecl (69)
        on left: 27
        on right: 5
    FuncDef (70)
        on left: 29
        on right: 6
    $@1 (71)
        on left: 28
        on right: 29
    FuncHead <strval> (72)
        on left: 30
        on right: 27 29
    OptFormParList (73)
        on left: 31 32
        on right: 30
    FormParList (74)
        on left: 33 34 35
        on right: 32 35
    ParamDef (75)
        on left: 36
        on right: 34 35
    OptArray (76)
        on left: 37 38
        on right: 36
    Type (77)
        on left: 39 40 41
        on right: 8 19 30 36 112
    Block (78)
        on left: 42
        on right: 29 59
    BlockItems (79)
        on left: 43 44
        on right: 42 44
    BlockItem (80)
        on left: 45 46 47
        on right: 44
    Stat (81)
        on left: 48 49 50 51 52 53 54 55 56 57
        on right: 47 61 62 63
    EmptyStat (82)
        on left: 58
        on right: 48
    BlockStat (83)
        on left: 59
        on right: 49
    ExprStat (84)
        on left: 60
        on right: 50
    IfStat (85)
        on left: 61 62
        on right: 51
    WhileStat (86)
        on left: 63
        on right: 52
    BreakStat (87)
        on left: 64
        on right: 53
    InputStat (88)
        on left: 65
        on right: 54
    OutputStat (89)
        on left: 66
        on right: 55
    OutList (90)
        on left: 67 68
        on right: 66 68
    OutExpr (91)
        on left: 69 70 71
        on right: 67 68
    DeleteStat (92)
        on left: 72
        on right: 56
    ReturnStat (93)
        on left: 73
        on right: 57
    OptExpr (94)
        on left: 74 75
        on right: 73
    Expr (95)
        on left: 76 77
        on right: 60 61 62 63 69 75 112 113 115 126 127
    AssignOp (96)
        on left: 78 79 80 81 82 83
        on right: 77
    OrExpr (97)
        on left: 84 85
        on right: 76 77 85
    AndExpr (98)
        on left: 86 87
        on right: 84 85 87
    RelExpr (99)
        on left: 88 89
        on right: 86 87 89
    RelOp (100)
        on left: 90 91 92 93 94 95
        on right: 89
    SimpleExpr (101)
        on left: 96 97
        on right: 88 89 97
    AddOp (102)
        on left: 98 99
        on right: 97
    Term (103)
        on left: 100 101
        on right: 96 97 101
    MulOp (104)
        on left: 102 103 104
        on right: 101
    NotFact (105)
        on left: 105 106
        on right: 100 101
    Fact (106)
        on left: 107 108 109 110 111 112 113
        on right: 105 106
    LValue (107)
        on left: 114 115 117
        on right: 111
    $@2 (108)
        on left: 116
        on right: 117
    OptInc (109)
        on left: 118 119 120
        on right: 114 115 117
    OptPostInc (110)
        on left: 121 122 123
        on right: 114 115 117
    OptActParams (111)
        on left: 124 125
        on right: 117
    ActParams (112)
        on left: 126 127
        on right: 125 127


State 0

    0 $accept: • MiniCpp $end

    $default  reduce using rule 1 (MiniCpp)

    MiniCpp  go to state 1


State 1

    0 $accept: MiniCpp • $end
    2 MiniCpp: MiniCpp • TopLevel

    $end   shift, and go to state 2
    BOOL   shift, and go to state 3
    CONST  shift, and go to state 4
    INT    shift, and go to state 5
    VOID   shift, and go to state 6
    ';'    shift, and go to state 7

    TopLevel  go to state 8
    ConstDef  go to state 9
    VarDef    go to state 10
    FuncDecl  go to state 11
    FuncDef   go to state 12
    FuncHead  go to state 13
    Type      go to state 14


State 2

    0 $accept: MiniCpp $end •

    $default  accept


State 3

   40 Type: BOOL •

    $default  reduce using rule 40 (Type)


State 4

    8 ConstDef: CONST • Type IdentInit ';'

    BOOL  shift, and go to state 3
    INT   shift, and go to state 5
    VOID  shift, and go to state 6

    Type  go to state 15


State 5

   41 Type: INT •

    $default  reduce using rule 41 (Type)


State 6

   39 Type: VOID •

    $default  reduce using rule 39 (Type)


State 7

    7 TopLevel: ';' •

    $default  reduce using rule 7 (TopLevel)


State 8

    2 MiniCpp: MiniCpp TopLevel •

    $default  reduce using rule 2 (MiniCpp)


State 9

    3 TopLevel: ConstDef •

    $default  reduce using rule 3 (TopLevel)


State 10

    4 TopLevel: VarDef •

    $default  reduce using rule 4 (TopLevel)


State 11

    5 TopLevel: FuncDecl •

    $default  reduce using rule 5 (TopLevel)


State 12

    6 TopLevel: FuncDef •

    $default  reduce using rule 6 (TopLevel)


State 13

   27 FuncDecl: FuncHead • ';'
   29 FuncDef: FuncHead • $@1 Block

    ';'  shift, and go to state 16

    $default  reduce using rule 28 ($@1)

    $@1  go to state 17


State 14

   19 VarDef: Type • VarList ';'
   30 FuncHead: Type • OptPointer IDENT '(' OptFormParList ')'

    '*'  shift, and go to state 18

    $default  reduce using rule 23 (OptPointer)

    VarList     go to state 19
    VarItem     go to state 20
    OptPointer  go to state 21


State 15

    8 ConstDef: CONST Type • IdentInit ';'

    IDENT  shift, and go to state 22

    IdentInit  go to state 23


State 16

   27 FuncDecl: FuncHead ';' •

    $default  reduce using rule 27 (FuncDecl)


State 17

   29 FuncDef: FuncHead $@1 • Block

    '{'  shift, and go to state 24

    Block  go to state 25


State 18

   24 OptPointer: '*' •

    $default  reduce using rule 24 (OptPointer)


State 19

   19 VarDef: Type VarList • ';'
   21 VarList: VarList • ',' VarItem

    ';'  shift, and go to state 26
    ','  shift, and go to state 27


State 20

   20 VarList: VarItem •

    $default  reduce using rule 20 (VarList)


State 21

   22 VarItem: OptPointer • IDENT OptInit
   30 FuncHead: Type OptPointer • IDENT '(' OptFormParList ')'

    IDENT  shift, and go to state 28


State 22

    9 IdentInit: IDENT • Init

    '='  shift, and go to state 29

    Init  go to state 30


State 23

    8 ConstDef: CONST Type IdentInit • ';'
   10 IdentInit: IdentInit • ',' IDENT Init

    ';'  shift, and go to state 31
    ','  shift, and go to state 32


State 24

   42 Block: '{' • BlockItems '}'

    $default  reduce using rule 43 (BlockItems)

    BlockItems  go to state 33


State 25

   29 FuncDef: FuncHead $@1 Block •

    $default  reduce using rule 29 (FuncDef)


State 26

   19 VarDef: Type VarList ';' •

    $default  reduce using rule 19 (VarDef)


State 27

   21 VarList: VarList ',' • VarItem

    '*'  shift, and go to state 18

    $default  reduce using rule 23 (OptPointer)

    VarItem     go to state 34
    OptPointer  go to state 35


State 28

   22 VarItem: OptPointer IDENT • OptInit
   30 FuncHead: Type OptPointer IDENT • '(' OptFormParList ')'

    '='  shift, and go to state 29
    '('  shift, and go to state 36

    $default  reduce using rule 25 (OptInit)

    Init     go to state 37
    OptInit  go to state 38


State 29

   11 Init: '=' • InitValue

    FALSE    shift, and go to state 39
    NULLPTR  shift, and go to state 40
    TRUE     shift, and go to state 41
    '+'      shift, and go to state 42
    '-'      shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    InitValue  go to state 44
    OptSign    go to state 45


State 30

    9 IdentInit: IDENT Init •

    $default  reduce using rule 9 (IdentInit)


State 31

    8 ConstDef: CONST Type IdentInit ';' •

    $default  reduce using rule 8 (ConstDef)


State 32

   10 IdentInit: IdentInit ',' • IDENT Init

    IDENT  shift, and go to state 46


State 33

   42 Block: '{' BlockItems • '}'
   44 BlockItems: BlockItems • BlockItem

    BOOL    shift, and go to state 3
    BREAK   shift, and go to state 47
    CIN     shift, and go to state 48
    CONST   shift, and go to state 4
    COUT    shift, and go to state 49
    DELETE  shift, and go to state 50
    IF      shift, and go to state 51
    INT     shift, and go to state 5
    RETURN  shift, and go to state 52
    VOID    shift, and go to state 6
    WHILE   shift, and go to state 53
    ';'     shift, and go to state 54
    '+'     shift, and go to state 42
    '-'     shift, and go to state 43
    '{'     shift, and go to state 24
    '}'     shift, and go to state 55

    $default  reduce using rule 16 (OptSign)

    ConstDef    go to state 56
    OptSign     go to state 57
    VarDef      go to state 58
    Type        go to state 59
    Block       go to state 60
    BlockItem   go to state 61
    Stat        go to state 62
    EmptyStat   go to state 63
    BlockStat   go to state 64
    ExprStat    go to state 65
    IfStat      go to state 66
    WhileStat   go to state 67
    BreakStat   go to state 68
    InputStat   go to state 69
    OutputStat  go to state 70
    DeleteStat  go to state 71
    ReturnStat  go to state 72
    Expr        go to state 73
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 34

   21 VarList: VarList ',' VarItem •

    $default  reduce using rule 21 (VarList)


State 35

   22 VarItem: OptPointer • IDENT OptInit

    IDENT  shift, and go to state 78


State 36

   30 FuncHead: Type OptPointer IDENT '(' • OptFormParList ')'

    BOOL  shift, and go to state 3
    INT   shift, and go to state 5
    VOID  shift, and go to state 79

    $default  reduce using rule 31 (OptFormParList)

    OptFormParList  go to state 80
    FormParList     go to state 81
    ParamDef        go to state 82
    Type            go to state 83


State 37

   26 OptInit: Init •

    $default  reduce using rule 26 (OptInit)


State 38

   22 VarItem: OptPointer IDENT OptInit •

    $default  reduce using rule 22 (VarItem)


State 39

   12 InitValue: FALSE •

    $default  reduce using rule 12 (InitValue)


State 40

   14 InitValue: NULLPTR •

    $default  reduce using rule 14 (InitValue)


State 41

   13 InitValue: TRUE •

    $default  reduce using rule 13 (InitValue)


State 42

   17 OptSign: '+' •

    $default  reduce using rule 17 (OptSign)


State 43

   18 OptSign: '-' •

    $default  reduce using rule 18 (OptSign)


State 44

   11 Init: '=' InitValue •

    $default  reduce using rule 11 (Init)


State 45

   15 InitValue: OptSign • NUMBER

    NUMBER  shift, and go to state 84


State 46

   10 IdentInit: IdentInit ',' IDENT • Init

    '='  shift, and go to state 29

    Init  go to state 85


State 47

   64 BreakStat: BREAK • ';'

    ';'  shift, and go to state 86


State 48

   65 InputStat: CIN • SHR IDENT ';'

    SHR  shift, and go to state 87


State 49

   66 OutputStat: COUT • OutList ';'

    SHL  shift, and go to state 88

    OutList  go to state 89


State 50

   72 DeleteStat: DELETE • '[' ']' IDENT ';'

    '['  shift, and go to state 90


State 51

   61 IfStat: IF • '(' Expr ')' Stat
   62       | IF • '(' Expr ')' Stat ELSE Stat

    '('  shift, and go to state 91


State 52

   73 ReturnStat: RETURN • OptExpr ';'

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    ';'       reduce using rule 74 (OptExpr)
    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    OptExpr     go to state 92
    Expr        go to state 93
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 53

   63 WhileStat: WHILE • '(' Expr ')' Stat

    '('  shift, and go to state 94


State 54

   58 EmptyStat: ';' •

    $default  reduce using rule 58 (EmptyStat)


State 55

   42 Block: '{' BlockItems '}' •

    $default  reduce using rule 42 (Block)


State 56

   45 BlockItem: ConstDef •

    $default  reduce using rule 45 (BlockItem)


State 57

   96 SimpleExpr: OptSign • Term

    FALSE    shift, and go to state 95
    NEW      shift, and go to state 96
    NULLPTR  shift, and go to state 97
    TRUE     shift, and go to state 98
    NUMBER   shift, and go to state 99
    INC      shift, and go to state 100
    DEC      shift, and go to state 101
    '('      shift, and go to state 102
    '!'      shift, and go to state 103

    $default  reduce using rule 118 (OptInc)

    Term     go to state 104
    NotFact  go to state 105
    Fact     go to state 106
    LValue   go to state 107
    OptInc   go to state 108


State 58

   46 BlockItem: VarDef •

    $default  reduce using rule 46 (BlockItem)


State 59

   19 VarDef: Type • VarList ';'

    '*'  shift, and go to state 18

    $default  reduce using rule 23 (OptPointer)

    VarList     go to state 19
    VarItem     go to state 20
    OptPointer  go to state 35


State 60

   59 BlockStat: Block •

    $default  reduce using rule 59 (BlockStat)


State 61

   44 BlockItems: BlockItems BlockItem •

    $default  reduce using rule 44 (BlockItems)


State 62

   47 BlockItem: Stat •

    $default  reduce using rule 47 (BlockItem)


State 63

   48 Stat: EmptyStat •

    $default  reduce using rule 48 (Stat)


State 64

   49 Stat: BlockStat •

    $default  reduce using rule 49 (Stat)


State 65

   50 Stat: ExprStat •

    $default  reduce using rule 50 (Stat)


State 66

   51 Stat: IfStat •

    $default  reduce using rule 51 (Stat)


State 67

   52 Stat: WhileStat •

    $default  reduce using rule 52 (Stat)


State 68

   53 Stat: BreakStat •

    $default  reduce using rule 53 (Stat)


State 69

   54 Stat: InputStat •

    $default  reduce using rule 54 (Stat)


State 70

   55 Stat: OutputStat •

    $default  reduce using rule 55 (Stat)


State 71

   56 Stat: DeleteStat •

    $default  reduce using rule 56 (Stat)


State 72

   57 Stat: ReturnStat •

    $default  reduce using rule 57 (Stat)


State 73

   60 ExprStat: Expr • ';'

    ';'  shift, and go to state 109


State 74

   76 Expr: OrExpr •
   77     | OrExpr • AssignOp OrExpr
   85 OrExpr: OrExpr • OR AndExpr

    PLUSEQ   shift, and go to state 110
    MINUSEQ  shift, and go to state 111
    TIMESEQ  shift, and go to state 112
    DIVEQ    shift, and go to state 113
    MODEQ    shift, and go to state 114
    OR       shift, and go to state 115
    '='      shift, and go to state 116

    $default  reduce using rule 76 (Expr)

    AssignOp  go to state 117


State 75

   84 OrExpr: AndExpr •
   87 AndExpr: AndExpr • AND RelExpr

    AND  shift, and go to state 118

    $default  reduce using rule 84 (OrExpr)


State 76

   86 AndExpr: RelExpr •
   89 RelExpr: RelExpr • RelOp SimpleExpr

    EQ   shift, and go to state 119
    NEQ  shift, and go to state 120
    LEQ  shift, and go to state 121
    GEQ  shift, and go to state 122
    '<'  shift, and go to state 123
    '>'  shift, and go to state 124

    $default  reduce using rule 86 (AndExpr)

    RelOp  go to state 125


State 77

   88 RelExpr: SimpleExpr •
   97 SimpleExpr: SimpleExpr • AddOp Term

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 88 (RelExpr)

    AddOp  go to state 128


State 78

   22 VarItem: OptPointer IDENT • OptInit

    '='  shift, and go to state 29

    $default  reduce using rule 25 (OptInit)

    Init     go to state 37
    OptInit  go to state 38


State 79

   33 FormParList: VOID •
   39 Type: VOID •

    IDENT     reduce using rule 39 (Type)
    '*'       reduce using rule 39 (Type)
    $default  reduce using rule 33 (FormParList)


State 80

   30 FuncHead: Type OptPointer IDENT '(' OptFormParList • ')'

    ')'  shift, and go to state 129


State 81

   32 OptFormParList: FormParList •
   35 FormParList: FormParList • ',' ParamDef

    ','  shift, and go to state 130

    $default  reduce using rule 32 (OptFormParList)


State 82

   34 FormParList: ParamDef •

    $default  reduce using rule 34 (FormParList)


State 83

   36 ParamDef: Type • OptPointer IDENT OptArray

    '*'  shift, and go to state 18

    $default  reduce using rule 23 (OptPointer)

    OptPointer  go to state 131


State 84

   15 InitValue: OptSign NUMBER •

    $default  reduce using rule 15 (InitValue)


State 85

   10 IdentInit: IdentInit ',' IDENT Init •

    $default  reduce using rule 10 (IdentInit)


State 86

   64 BreakStat: BREAK ';' •

    $default  reduce using rule 64 (BreakStat)


State 87

   65 InputStat: CIN SHR • IDENT ';'

    IDENT  shift, and go to state 132


State 88

   67 OutList: SHL • OutExpr

    ENDL    shift, and go to state 133
    STRING  shift, and go to state 134
    '+'     shift, and go to state 42
    '-'     shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    OutExpr     go to state 135
    Expr        go to state 136
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 89

   66 OutputStat: COUT OutList • ';'
   68 OutList: OutList • SHL OutExpr

    SHL  shift, and go to state 137
    ';'  shift, and go to state 138


State 90

   72 DeleteStat: DELETE '[' • ']' IDENT ';'

    ']'  shift, and go to state 139


State 91

   61 IfStat: IF '(' • Expr ')' Stat
   62       | IF '(' • Expr ')' Stat ELSE Stat

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    Expr        go to state 140
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 92

   73 ReturnStat: RETURN OptExpr • ';'

    ';'  shift, and go to state 141


State 93

   75 OptExpr: Expr •

    $default  reduce using rule 75 (OptExpr)


State 94

   63 WhileStat: WHILE '(' • Expr ')' Stat

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    Expr        go to state 142
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 95

  107 Fact: FALSE •

    $default  reduce using rule 107 (Fact)


State 96

  112 Fact: NEW • Type '[' Expr ']'

    BOOL  shift, and go to state 3
    INT   shift, and go to state 5
    VOID  shift, and go to state 6

    Type  go to state 143


State 97

  109 Fact: NULLPTR •

    $default  reduce using rule 109 (Fact)


State 98

  108 Fact: TRUE •

    $default  reduce using rule 108 (Fact)


State 99

  110 Fact: NUMBER •

    $default  reduce using rule 110 (Fact)


State 100

  119 OptInc: INC •

    $default  reduce using rule 119 (OptInc)


State 101

  120 OptInc: DEC •

    $default  reduce using rule 120 (OptInc)


State 102

  113 Fact: '(' • Expr ')'

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    Expr        go to state 144
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 103

  106 NotFact: '!' • Fact

    FALSE    shift, and go to state 95
    NEW      shift, and go to state 96
    NULLPTR  shift, and go to state 97
    TRUE     shift, and go to state 98
    NUMBER   shift, and go to state 99
    INC      shift, and go to state 100
    DEC      shift, and go to state 101
    '('      shift, and go to state 102

    $default  reduce using rule 118 (OptInc)

    Fact    go to state 145
    LValue  go to state 107
    OptInc  go to state 108


State 104

   96 SimpleExpr: OptSign Term •
  101 Term: Term • MulOp NotFact

    '*'  shift, and go to state 146
    '/'  shift, and go to state 147
    '%'  shift, and go to state 148

    $default  reduce using rule 96 (SimpleExpr)

    MulOp  go to state 149


State 105

  100 Term: NotFact •

    $default  reduce using rule 100 (Term)


State 106

  105 NotFact: Fact •

    $default  reduce using rule 105 (NotFact)


State 107

  111 Fact: LValue •

    $default  reduce using rule 111 (Fact)


State 108

  114 LValue: OptInc • IDENT OptPostInc
  115       | OptInc • IDENT '[' Expr ']' OptPostInc
  117       | OptInc • IDENT '(' $@2 OptActParams ')' OptPostInc

    IDENT  shift, and go to state 150


State 109

   60 ExprStat: Expr ';' •

    $default  reduce using rule 60 (ExprStat)


State 110

   79 AssignOp: PLUSEQ •

    $default  reduce using rule 79 (AssignOp)


State 111

   80 AssignOp: MINUSEQ •

    $default  reduce using rule 80 (AssignOp)


State 112

   81 AssignOp: TIMESEQ •

    $default  reduce using rule 81 (AssignOp)


State 113

   82 AssignOp: DIVEQ •

    $default  reduce using rule 82 (AssignOp)


State 114

   83 AssignOp: MODEQ •

    $default  reduce using rule 83 (AssignOp)


State 115

   85 OrExpr: OrExpr OR • AndExpr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    AndExpr     go to state 151
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 116

   78 AssignOp: '=' •

    $default  reduce using rule 78 (AssignOp)


State 117

   77 Expr: OrExpr AssignOp • OrExpr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    OrExpr      go to state 152
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 118

   87 AndExpr: AndExpr AND • RelExpr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    RelExpr     go to state 153
    SimpleExpr  go to state 77


State 119

   90 RelOp: EQ •

    $default  reduce using rule 90 (RelOp)


State 120

   91 RelOp: NEQ •

    $default  reduce using rule 91 (RelOp)


State 121

   93 RelOp: LEQ •

    $default  reduce using rule 93 (RelOp)


State 122

   95 RelOp: GEQ •

    $default  reduce using rule 95 (RelOp)


State 123

   92 RelOp: '<' •

    $default  reduce using rule 92 (RelOp)


State 124

   94 RelOp: '>' •

    $default  reduce using rule 94 (RelOp)


State 125

   89 RelExpr: RelExpr RelOp • SimpleExpr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    SimpleExpr  go to state 154


State 126

   98 AddOp: '+' •

    $default  reduce using rule 98 (AddOp)


State 127

   99 AddOp: '-' •

    $default  reduce using rule 99 (AddOp)


State 128

   97 SimpleExpr: SimpleExpr AddOp • Term

    FALSE    shift, and go to state 95
    NEW      shift, and go to state 96
    NULLPTR  shift, and go to state 97
    TRUE     shift, and go to state 98
    NUMBER   shift, and go to state 99
    INC      shift, and go to state 100
    DEC      shift, and go to state 101
    '('      shift, and go to state 102
    '!'      shift, and go to state 103

    $default  reduce using rule 118 (OptInc)

    Term     go to state 155
    NotFact  go to state 105
    Fact     go to state 106
    LValue   go to state 107
    OptInc   go to state 108


State 129

   30 FuncHead: Type OptPointer IDENT '(' OptFormParList ')' •

    $default  reduce using rule 30 (FuncHead)


State 130

   35 FormParList: FormParList ',' • ParamDef

    BOOL  shift, and go to state 3
    INT   shift, and go to state 5
    VOID  shift, and go to state 6

    ParamDef  go to state 156
    Type      go to state 83


State 131

   36 ParamDef: Type OptPointer • IDENT OptArray

    IDENT  shift, and go to state 157


State 132

   65 InputStat: CIN SHR IDENT • ';'

    ';'  shift, and go to state 158


State 133

   71 OutExpr: ENDL •

    $default  reduce using rule 71 (OutExpr)


State 134

   70 OutExpr: STRING •

    $default  reduce using rule 70 (OutExpr)


State 135

   67 OutList: SHL OutExpr •

    $default  reduce using rule 67 (OutList)


State 136

   69 OutExpr: Expr •

    $default  reduce using rule 69 (OutExpr)


State 137

   68 OutList: OutList SHL • OutExpr

    ENDL    shift, and go to state 133
    STRING  shift, and go to state 134
    '+'     shift, and go to state 42
    '-'     shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    OutExpr     go to state 159
    Expr        go to state 136
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 138

   66 OutputStat: COUT OutList ';' •

    $default  reduce using rule 66 (OutputStat)


State 139

   72 DeleteStat: DELETE '[' ']' • IDENT ';'

    IDENT  shift, and go to state 160


State 140

   61 IfStat: IF '(' Expr • ')' Stat
   62       | IF '(' Expr • ')' Stat ELSE Stat

    ')'  shift, and go to state 161


State 141

   73 ReturnStat: RETURN OptExpr ';' •

    $default  reduce using rule 73 (ReturnStat)


State 142

   63 WhileStat: WHILE '(' Expr • ')' Stat

    ')'  shift, and go to state 162


State 143

  112 Fact: NEW Type • '[' Expr ']'

    '['  shift, and go to state 163


State 144

  113 Fact: '(' Expr • ')'

    ')'  shift, and go to state 164


State 145

  106 NotFact: '!' Fact •

    $default  reduce using rule 106 (NotFact)


State 146

  102 MulOp: '*' •

    $default  reduce using rule 102 (MulOp)


State 147

  103 MulOp: '/' •

    $default  reduce using rule 103 (MulOp)


State 148

  104 MulOp: '%' •

    $default  reduce using rule 104 (MulOp)


State 149

  101 Term: Term MulOp • NotFact

    FALSE    shift, and go to state 95
    NEW      shift, and go to state 96
    NULLPTR  shift, and go to state 97
    TRUE     shift, and go to state 98
    NUMBER   shift, and go to state 99
    INC      shift, and go to state 100
    DEC      shift, and go to state 101
    '('      shift, and go to state 102
    '!'      shift, and go to state 103

    $default  reduce using rule 118 (OptInc)

    NotFact  go to state 165
    Fact     go to state 106
    LValue   go to state 107
    OptInc   go to state 108


State 150

  114 LValue: OptInc IDENT • OptPostInc
  115       | OptInc IDENT • '[' Expr ']' OptPostInc
  117       | OptInc IDENT • '(' $@2 OptActParams ')' OptPostInc

    INC  shift, and go to state 166
    DEC  shift, and go to state 167
    '('  shift, and go to state 168
    '['  shift, and go to state 169

    $default  reduce using rule 121 (OptPostInc)

    OptPostInc  go to state 170


State 151

   85 OrExpr: OrExpr OR AndExpr •
   87 AndExpr: AndExpr • AND RelExpr

    AND  shift, and go to state 118

    $default  reduce using rule 85 (OrExpr)


State 152

   77 Expr: OrExpr AssignOp OrExpr •
   85 OrExpr: OrExpr • OR AndExpr

    OR  shift, and go to state 115

    $default  reduce using rule 77 (Expr)


State 153

   87 AndExpr: AndExpr AND RelExpr •
   89 RelExpr: RelExpr • RelOp SimpleExpr

    EQ   shift, and go to state 119
    NEQ  shift, and go to state 120
    LEQ  shift, and go to state 121
    GEQ  shift, and go to state 122
    '<'  shift, and go to state 123
    '>'  shift, and go to state 124

    $default  reduce using rule 87 (AndExpr)

    RelOp  go to state 125


State 154

   89 RelExpr: RelExpr RelOp SimpleExpr •
   97 SimpleExpr: SimpleExpr • AddOp Term

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 89 (RelExpr)

    AddOp  go to state 128


State 155

   97 SimpleExpr: SimpleExpr AddOp Term •
  101 Term: Term • MulOp NotFact

    '*'  shift, and go to state 146
    '/'  shift, and go to state 147
    '%'  shift, and go to state 148

    $default  reduce using rule 97 (SimpleExpr)

    MulOp  go to state 149


State 156

   35 FormParList: FormParList ',' ParamDef •

    $default  reduce using rule 35 (FormParList)


State 157

   36 ParamDef: Type OptPointer IDENT • OptArray

    '['  shift, and go to state 171

    $default  reduce using rule 37 (OptArray)

    OptArray  go to state 172


State 158

   65 InputStat: CIN SHR IDENT ';' •

    $default  reduce using rule 65 (InputStat)


State 159

   68 OutList: OutList SHL OutExpr •

    $default  reduce using rule 68 (OutList)


State 160

   72 DeleteStat: DELETE '[' ']' IDENT • ';'

    ';'  shift, and go to state 173


State 161

   61 IfStat: IF '(' Expr ')' • Stat
   62       | IF '(' Expr ')' • Stat ELSE Stat

    BREAK   shift, and go to state 47
    CIN     shift, and go to state 48
    COUT    shift, and go to state 49
    DELETE  shift, and go to state 50
    IF      shift, and go to state 51
    RETURN  shift, and go to state 52
    WHILE   shift, and go to state 53
    ';'     shift, and go to state 54
    '+'     shift, and go to state 42
    '-'     shift, and go to state 43
    '{'     shift, and go to state 24

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    Block       go to state 60
    Stat        go to state 174
    EmptyStat   go to state 63
    BlockStat   go to state 64
    ExprStat    go to state 65
    IfStat      go to state 66
    WhileStat   go to state 67
    BreakStat   go to state 68
    InputStat   go to state 69
    OutputStat  go to state 70
    DeleteStat  go to state 71
    ReturnStat  go to state 72
    Expr        go to state 73
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 162

   63 WhileStat: WHILE '(' Expr ')' • Stat

    BREAK   shift, and go to state 47
    CIN     shift, and go to state 48
    COUT    shift, and go to state 49
    DELETE  shift, and go to state 50
    IF      shift, and go to state 51
    RETURN  shift, and go to state 52
    WHILE   shift, and go to state 53
    ';'     shift, and go to state 54
    '+'     shift, and go to state 42
    '-'     shift, and go to state 43
    '{'     shift, and go to state 24

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    Block       go to state 60
    Stat        go to state 175
    EmptyStat   go to state 63
    BlockStat   go to state 64
    ExprStat    go to state 65
    IfStat      go to state 66
    WhileStat   go to state 67
    BreakStat   go to state 68
    InputStat   go to state 69
    OutputStat  go to state 70
    DeleteStat  go to state 71
    ReturnStat  go to state 72
    Expr        go to state 73
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 163

  112 Fact: NEW Type '[' • Expr ']'

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    Expr        go to state 176
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 164

  113 Fact: '(' Expr ')' •

    $default  reduce using rule 113 (Fact)


State 165

  101 Term: Term MulOp NotFact •

    $default  reduce using rule 101 (Term)


State 166

  122 OptPostInc: INC •

    $default  reduce using rule 122 (OptPostInc)


State 167

  123 OptPostInc: DEC •

    $default  reduce using rule 123 (OptPostInc)


State 168

  117 LValue: OptInc IDENT '(' • $@2 OptActParams ')' OptPostInc

    $default  reduce using rule 116 ($@2)

    $@2  go to state 177


State 169

  115 LValue: OptInc IDENT '[' • Expr ']' OptPostInc

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    Expr        go to state 178
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 170

  114 LValue: OptInc IDENT OptPostInc •

    $default  reduce using rule 114 (LValue)


State 171

   38 OptArray: '[' • ']'

    ']'  shift, and go to state 179


State 172

   36 ParamDef: Type OptPointer IDENT OptArray •

    $default  reduce using rule 36 (ParamDef)


State 173

   72 DeleteStat: DELETE '[' ']' IDENT ';' •

    $default  reduce using rule 72 (DeleteStat)


State 174

   61 IfStat: IF '(' Expr ')' Stat •
   62       | IF '(' Expr ')' Stat • ELSE Stat

    ELSE  shift, and go to state 180

    $default  reduce using rule 61 (IfStat)


State 175

   63 WhileStat: WHILE '(' Expr ')' Stat •

    $default  reduce using rule 63 (WhileStat)


State 176

  112 Fact: NEW Type '[' Expr • ']'

    ']'  shift, and go to state 181


State 177

  117 LValue: OptInc IDENT '(' $@2 • OptActParams ')' OptPostInc

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    ')'       reduce using rule 124 (OptActParams)
    $default  reduce using rule 16 (OptSign)

    OptSign       go to state 57
    Expr          go to state 182
    OrExpr        go to state 74
    AndExpr       go to state 75
    RelExpr       go to state 76
    SimpleExpr    go to state 77
    OptActParams  go to state 183
    ActParams     go to state 184


State 178

  115 LValue: OptInc IDENT '[' Expr • ']' OptPostInc

    ']'  shift, and go to state 185


State 179

   38 OptArray: '[' ']' •

    $default  reduce using rule 38 (OptArray)


State 180

   62 IfStat: IF '(' Expr ')' Stat ELSE • Stat

    BREAK   shift, and go to state 47
    CIN     shift, and go to state 48
    COUT    shift, and go to state 49
    DELETE  shift, and go to state 50
    IF      shift, and go to state 51
    RETURN  shift, and go to state 52
    WHILE   shift, and go to state 53
    ';'     shift, and go to state 54
    '+'     shift, and go to state 42
    '-'     shift, and go to state 43
    '{'     shift, and go to state 24

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    Block       go to state 60
    Stat        go to state 186
    EmptyStat   go to state 63
    BlockStat   go to state 64
    ExprStat    go to state 65
    IfStat      go to state 66
    WhileStat   go to state 67
    BreakStat   go to state 68
    InputStat   go to state 69
    OutputStat  go to state 70
    DeleteStat  go to state 71
    ReturnStat  go to state 72
    Expr        go to state 73
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 181

  112 Fact: NEW Type '[' Expr ']' •

    $default  reduce using rule 112 (Fact)


State 182

  126 ActParams: Expr •

    $default  reduce using rule 126 (ActParams)


State 183

  117 LValue: OptInc IDENT '(' $@2 OptActParams • ')' OptPostInc

    ')'  shift, and go to state 187


State 184

  125 OptActParams: ActParams •
  127 ActParams: ActParams • ',' Expr

    ','  shift, and go to state 188

    $default  reduce using rule 125 (OptActParams)


State 185

  115 LValue: OptInc IDENT '[' Expr ']' • OptPostInc

    INC  shift, and go to state 166
    DEC  shift, and go to state 167

    $default  reduce using rule 121 (OptPostInc)

    OptPostInc  go to state 189


State 186

   62 IfStat: IF '(' Expr ')' Stat ELSE Stat •

    $default  reduce using rule 62 (IfStat)


State 187

  117 LValue: OptInc IDENT '(' $@2 OptActParams ')' • OptPostInc

    INC  shift, and go to state 166
    DEC  shift, and go to state 167

    $default  reduce using rule 121 (OptPostInc)

    OptPostInc  go to state 190


State 188

  127 ActParams: ActParams ',' • Expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 16 (OptSign)

    OptSign     go to state 57
    Expr        go to state 191
    OrExpr      go to state 74
    AndExpr     go to state 75
    RelExpr     go to state 76
    SimpleExpr  go to state 77


State 189

  115 LValue: OptInc IDENT '[' Expr ']' OptPostInc •

    $default  reduce using rule 115 (LValue)


State 190

  117 LValue: OptInc IDENT '(' $@2 OptActParams ')' OptPostInc •

    $default  reduce using rule 117 (LValue)


State 191

  127 ActParams: ActParams ',' Expr •

    $default  reduce using rule 127 (ActParams)
